export declare const readEnv: () => ServerEnvironment;
export type ServerEnvironment = {
    port?: number;
    hostname?: string;
    serviceDid?: string;
    serviceName?: string;
    version?: string;
    homeUrl?: string;
    logoUrl?: string;
    privacyPolicyUrl?: string;
    supportUrl?: string;
    termsOfServiceUrl?: string;
    contactEmailAddress?: string;
    acceptingImports?: boolean;
    blobUploadLimit?: number;
    devMode?: boolean;
    brandColor?: string;
    errorColor?: string;
    warningColor?: string;
    dataDirectory?: string;
    disableWalAutoCheckpoint?: boolean;
    accountDbLocation?: string;
    sequencerDbLocation?: string;
    didCacheDbLocation?: string;
    actorStoreDirectory?: string;
    actorStoreCacheSize?: number;
    blobstoreS3Bucket?: string;
    blobstoreDiskLocation?: string;
    blobstoreDiskTmpLocation?: string;
    blobstoreS3Region?: string;
    blobstoreS3Endpoint?: string;
    blobstoreS3ForcePathStyle?: boolean;
    blobstoreS3AccessKeyId?: string;
    blobstoreS3SecretAccessKey?: string;
    blobstoreS3UploadTimeoutMs?: number;
    didPlcUrl?: string;
    didCacheStaleTTL?: number;
    didCacheMaxTTL?: number;
    resolverTimeout?: number;
    recoveryDidKey?: string;
    serviceHandleDomains?: string[];
    handleBackupNameservers?: string[];
    enableDidDocWithSession?: boolean;
    entrywayUrl?: string;
    entrywayDid?: string;
    entrywayJwtVerifyKeyK256PublicKeyHex?: string;
    entrywayPlcRotationKey?: string;
    inviteRequired?: boolean;
    inviteInterval?: number;
    inviteEpoch?: number;
    emailSmtpUrl?: string;
    emailFromAddress?: string;
    moderationEmailSmtpUrl?: string;
    moderationEmailAddress?: string;
    maxSubscriptionBuffer?: number;
    repoBackfillLimitMs?: number;
    bskyAppViewUrl?: string;
    bskyAppViewDid?: string;
    bskyAppViewCdnUrlPattern?: string;
    modServiceUrl?: string;
    modServiceDid?: string;
    reportServiceUrl?: string;
    reportServiceDid?: string;
    rateLimitsEnabled?: boolean;
    rateLimitBypassKey?: string;
    rateLimitBypassIps?: string[];
    redisScratchAddress?: string;
    redisScratchPassword?: string;
    crawlers?: string[];
    dpopSecret?: string;
    jwtSecret?: string;
    adminPassword?: string;
    plcRotationKeyKmsKeyId?: string;
    plcRotationKeyK256PrivateKeyHex?: string;
    disableSsrfProtection?: boolean;
    fetchMaxResponseSize?: number;
    proxyAllowHTTP2?: boolean;
    proxyHeadersTimeout?: number;
    proxyBodyTimeout?: number;
    proxyMaxResponseSize?: number;
    proxyMaxRetries?: number;
    proxyPreferCompressed?: boolean;
};
//# sourceMappingURL=env.d.ts.map